package com.idefav.springbootdemo.config;

import com.idefav.springbootdemo.Loadbancor;
import com.idefav.springbootdemo.RandomLoadBancor;
import com.idefav.springbootdemo.interceptor.UrlOverriderInterceptor;
import com.idefav.springbootdemo.properties.ServerListProperty;
import io.opentracing.Tracer;
import org.apache.commons.collections4.CollectionUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.http.client.ClientHttpRequestInterceptor;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;

@Configuration
@EnableConfigurationProperties(ServerListProperty.class)
public class AppConfig {

    @Autowired
    private ServerListProperty serverListProperty;


    @Bean
    public RestTemplate restTemplate() {
        RestTemplate restTemplate = new RestTemplate();
        List<ClientHttpRequestInterceptor> interceptors = restTemplate.getInterceptors();
        if (CollectionUtils.isEmpty(interceptors)) {
            interceptors = new ArrayList<>();
        }
        interceptors.add(new UrlOverriderInterceptor(serverListProperty.getServiceList()));
        restTemplate.setInterceptors(interceptors);
        return restTemplate;
    }

    @Bean
    public Tracer jaegerTracer() {
        // The following environment variables need to set
        // JAEGER_ENDPOINT="http://10.42.126.171:28019/api/traces"
        // JAEGER_PROPAGATION="b3"
        // JAEGER_TRACEID_128BIT="true" Use 128bit tracer id to be compatible with the
        // trace id generated by istio/envoy
        return io.jaegertracing.Configuration.fromEnv("springboot-demo").getTracer();
    }
}
